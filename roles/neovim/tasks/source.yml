---
- name: Install Neovim build dependencies
  block:
    - name: Remove existing neovim
      become: true 
      ansible.builtin.package:
        name: neovim
        state: absent

    - name: Install Debian build dependencies.
      become: true
      ansible.builtin.apt:
        name:
          - cmake
          - curl
          - gettext
          - git
          - ninja-build
          - unzip
          - build-essentials
        state: latest
      when: ansible_distribution == "Debian"

    - name: Install RedHat build dependencies.
      become: true
      ansible.builtin.dnf:
        name:
          - cmake
          - curl
          - gcc
          - gettext
          - git
          - make
          - ninja-build
          - unzip
          - glibc-gconv-extra
        state: latest
      when: ansible_os_family == 'RedHat'

    - name: Install openSuse build dependencies.
      become: true
      community.general.zypper:
        name:
          - cmake
          - curl
          - gcc-c++
          - gettext-tools
          - git
          - ninja
        state: latest
      when: ansible_distribution == 'openSuse'

    - name: Install Python-pip
      ansible.builtin.package:
        name: python3-pip
        state: present
      become: true

    - name: Ensure python-requests is installed
      ansible.builtin.pip:
        name: requests
        state: present
      become: true

- name: Compare current installed version against latest stable
  ansible.builtin.script:
    cmd: library/need_neovim_upgrade.py
    executable: /usr/bin/python
  register: need_upgrade

- name: Build from source if there is a new stable version
  block:
    - name: Clone the repo
      ansible.builtin.git:
        repo: "https://github.com/neovim/neovim"
        dest: /tmp/neovim
        single_branch: yes
        version: stable

    - name: Build neovim from stable source
      become: true
      community.general.make:
        chdir: /tmp/neovim
        target: install
        params:
          CMAKE_BUILD_TYPE: RelWithDebInfo

    - name: remove dir
      become: true
      ansible.builtin.file:
        path: /tmp/neovim
        state: absent
  when: need_upgrade.stdout | trim == 'needUpgrade' 
