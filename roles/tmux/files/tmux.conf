# Reload the file with Prefix r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original Ctrl-b prefix keybinding
unbind C-b

# setting the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# split pane and retain the current directory of existing pane
bind _ split-window -v -c  "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing panes with Prefix H,J,K,L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# mouse support - set to on if you want to use the mouse
set -g mouse on

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# enable vi keys
setw -g mode-keys vi

# copy mode
bind Escape copy-mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Prefix Ctrl-C takes what's in the buffer and sends it to system clipboard via xclip
bind C-c run "tmux save-buffer - | xclip -sel clip -i"

# y in copy mode takes selection and sends it to system clipboard via xclip
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"

# Prefix Ctrl-v fills tmux buffer from system clipboard via xclip, then
# pastes from buffer into tmux window
bind C-v run "tmux set-buffer \"$(xclip -sel clip -o)\"; tmux paste-buffer"

# make Prefix p paste the buffer.
unbind C-p
bind C-p paste-buffer

# shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# load private settings if they exist
if-shell "[ -f ~/.tmux.private]" "source ~/.tmux.private"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'

# --- Styling --- #

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

set -g status-position top
set -g status-justify left

# default statusbar color
set-option -g status-style bg="#282828",fg=colour223

# default window title colors
set-window-option -g window-status-style bg=colour237,fg=colour247

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour222,fg=colour248

# active window title colors
set-window-option -g window-status-current-style bg="#ebdbb2",fg="#282828"

# pane border
set-option -g pane-active-border-style fg=colour250
set-option -g pane-border-style fg=colour237

# message infos
set-option -g message-style bg=colour239,fg=colour223

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223

# pane number display
set-option -g display-panes-active-colour colour222
set-option -g display-panes-colour colour237

set-option -g status-left "#[bg=colour237,fg=colour246]"
set-option -g status-right "#[bg=colour237,fg=colour246] %m-%d | %H:%M"

# Update the status line every sixty seconds
set -g status-interval 5

# --- Plugins with tpm --- #

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'

